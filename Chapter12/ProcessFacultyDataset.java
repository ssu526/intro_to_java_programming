




/* 12.25 (Process large dataset) A university posts its employeesÆ salaries at http:// cs.armstrong.edu/liang/data/Salary.txt. Each line in the file consists of a faculty memberÆs first name, last name, rank, and salary (see Programming Exercise 12.24). Write a program to display the total salary for assistant professors, associate professors, full professors, and all faculty, respectively, and display the average salary for assistant professors, associate professors, full professors, and all faculty, respectively. */ import java.io.*; import java.util.*; import java.text.*; public class ProcessFacultyDataset{ public static void main(String[] args) throws IOException{ java.net.URL url = new java.net.URL("http://cs.armstrong.edu/liang/data/Salary.txt"); Scanner input = new Scanner(url.openStream()); double assistantSalary=0; double associateSalary=0; double fullSalary=0; int assistantCount=0; int associateCount=0; int fullCount=0; while(input.hasNext()){ String line=input.nextLine(); String[] info = line.split(" "); String rank=info[2]; double salary = Double.parseDouble(info[3]); if(rank.equals("assistant")){ assistantCount++; assistantSalary +=salary; }else if(rank.equals("associate")){ associateCount++; associateSalary +=salary; }else{ fullCount++; fullSalary +=salary; } } double totalSalary= assistantSalary+associateSalary+fullSalary; int count = assistantCount+associateCount+fullCount; NumberFormat nf = new DecimalFormat("#0.00"); System.out.println(" Total Salary "+"\n------------------------------------------------------------------"); System.out.println("Assistant Associate Full Total"); System.out.println(nf.format(assistantSalary)+" "+nf.format(associateSalary)+" "+nf.format(fullSalary)+" "+nf.format(totalSalary)+"\n"); double overallAverage = totalSalary/count; System.out.println(" Average Salary "+"\n------------------------------------------------------------------"); System.out.println("Assistant Associate Full Overall Average"); System.out.println(nf.format(assistantSalary/assistantCount)+" "+nf.format(associateSalary/associateCount)+" "+nf.format(fullSalary/fullCount)+" "+nf.format(overallAverage)); } } 
